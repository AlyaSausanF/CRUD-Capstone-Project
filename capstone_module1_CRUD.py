# -*- coding: utf-8 -*-
"""CAPSTONE FINAL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y3NPMBscAFLExtbdKmJknV7m4Gl34aPs
"""

import re
from datetime import datetime
import pandas as pd
from tabulate import tabulate

# Dummy data untuk login
users = {
    'admin': {'password': 'admin123', 'role': 'admin'},
}

# Dummy data siswa dengan format tanggal dd-mm-yyyy dan status 'belum lulus'
data_siswa = {
    101: {'nama': 'Aldo Pratama', 'tgl_lahir': '15-01-2005', 'kota_dom': 'Jakarta', 'email': 'aldo.pratama@example.com', 'status_siswa': 'belum lulus'},
    102: {'nama': 'Budi Setiawan', 'tgl_lahir': '30-09-2004', 'kota_dom': 'Bandung', 'email': 'budi.setiawan@example.com', 'status_siswa': 'belum lulus'},
    103: {'nama': 'Charlie Andika', 'tgl_lahir': '22-03-2005', 'kota_dom': 'Surabaya', 'email': 'charlie.andika@example.com', 'status_siswa': 'belum lulus'},
    104: {'nama': 'Dewi Kusuma', 'tgl_lahir': '18-06-2005', 'kota_dom': 'Yogyakarta', 'email': 'dewi.kusuma@example.com', 'status_siswa': 'belum lulus'},
    105: {'nama': 'Eko Nugroho', 'tgl_lahir': '07-12-2004', 'kota_dom': 'Semarang', 'email': 'eko.nugroho@example.com', 'status_siswa': 'belum lulus'},
    106: {'nama': 'Fina Maulani', 'tgl_lahir': '12-08-2005', 'kota_dom': 'Bali', 'email': 'fina.maulani@example.com', 'status_siswa': 'belum lulus'},
    107: {'nama': 'Gilang Saputra', 'tgl_lahir': '25-11-2004', 'kota_dom': 'Malang', 'email': 'gilang.saputra@example.com', 'status_siswa': 'belum lulus'},
    108: {'nama': 'Hani Setiani', 'tgl_lahir': '09-02-2005', 'kota_dom': 'Solo', 'email': 'hani.setiani@example.com', 'status_siswa': 'belum lulus'},
    109: {'nama': 'Indra Purnama', 'tgl_lahir': '17-10-2004', 'kota_dom': 'Palembang', 'email': 'indra.purnama@example.com', 'status_siswa': 'belum lulus'},
    110: {'nama': 'Joko Santoso', 'tgl_lahir': '11-04-2005', 'kota_dom': 'Medan', 'email': 'joko.santoso@example.com', 'status_siswa': 'belum lulus'}
}

# List untuk menyimpan data yang dihapus (backup)
deleted_data = {}

# Menambahkan username dan password student ke users berdasarkan NIS
for nis, siswa in data_siswa.items():
    users[nis] = {'password': str(nis), 'role': 'student'}

# Fungsi validasi data
def validasi_nis():
    while True:
        nis = input("Masukkan NIS (atau * untuk kembali): ")
        if nis == '*':
            return None
        if nis.isdigit():
            return int(nis)
        print("NIS tidak valid! Harus berupa angka.")

def validasi_nama():
    while True:
        nama = input("Masukkan Nama (atau * untuk kembali): ").title()
        if nama == '*':
            return None
        if re.match(r"^[a-zA-Z\s.'â€™]+$", nama):
            return nama
        print("Nama tidak valid! Harus berupa huruf, titik, atau petik satu")

def validasi_tgl_lahir():
    while True:
        tgl_lahir = input("Masukkan Tanggal Lahir (dd-mm-yyyy) (atau * untuk kembali): ")
        if tgl_lahir == '*':
            return None
        try:
            datetime.strptime(tgl_lahir, "%d-%m-%Y")
            return tgl_lahir
        except ValueError:
            print("Tanggal lahir tidak valid! Format harus dd-mm-yyyy.")

def validasi_kota_dom():
    while True:
        kota_dom = input("Masukkan Kota Domisili (atau * untuk kembali): ").title()
        if kota_dom == '*':
            return None
        if kota_dom.isalpha():
            return kota_dom
        print("Kota domisili tidak valid! Harus berupa huruf.")

def validasi_email():
    while True:
        email = input("Masukkan Email (atau * untuk kembali): ")
        if email == '*':
            return None
        email_regex = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
        if re.match(email_regex, email):
            return email
        print("Email tidak valid!")

# Fungsi untuk validasi duplikat email karena data boleh sama kecuali NIS dan email
def validasi_duplikat_email(email):
    for nis, siswa in data_siswa.items():
        if siswa['email'] == email:
            print("Data sudah ada!")
            return True
    return False

# Fungsi login
def login():
    username = input("Masukkan username: ").strip()
    if username == '*':
        return None, None
    password = input("Masukkan password: ").strip()
    if password == '*':
        return None, None

    if username.isdigit():
        username = int(username)

    if username in users and users[username]['password'] == password:
        print(f"Login berhasil sebagai {users[username]['role'].capitalize()}")
        return username, users[username]['role']
    else:
        print("Login gagal! Username atau password salah.")
        return None, None

# Fungsi untuk menampilkan data siswa dalam bentuk tabel dengan tablefmt='rounded_outline'
def tampilkan_data_siswa(data):
    df = pd.DataFrame.from_dict(data, orient='index')
    df.index.name = 'NIS'
    print(tabulate(df, headers='keys', tablefmt='rounded_outline', showindex=True))

# Fungsi untuk menampilkan deleted data dalam bentuk tabel
def tampilkan_deleted_data():
    if deleted_data:
        df = pd.DataFrame.from_dict(deleted_data, orient='index')
        df.index.name = 'NIS'
        print(tabulate(df, headers='keys', tablefmt='rounded_outline', showindex=True))
    else:
        print("Tidak ada data yang dihapus.")

# Fungsi Create (menambah data siswa)
def create_siswa(role, username=None):
    if role == 'admin' or (role == 'student' and username):
        nis = validasi_nis() if role == 'admin' else username
        if nis is None:
            return

        if nis in data_siswa:
            print(f"Siswa dengan NIS {nis} sudah ada!")
            return

        nama = validasi_nama()
        if nama is None:
            return
        tgl_lahir = validasi_tgl_lahir()
        if tgl_lahir is None:
            return
        kota_dom = validasi_kota_dom()
        if kota_dom is None:
            return
        email = validasi_email()
        if email is None:
            if validasi_duplikat_email(email):
                return

        data_siswa[nis] = {'nama': nama, 'tgl_lahir': tgl_lahir, 'kota_dom': kota_dom, 'email': email, 'status_siswa': 'belum lulus'}
        users[nis] = {'password': str(nis), 'role': 'student'}
        print("Data berhasil disimpan.")
    else:
        print("Anda tidak memiliki akses untuk menambah data.")

# Fungsi Read (melihat data siswa)
def read_siswa(role, username=None):
    if role == 'admin':
        pilihan = input("1. Cari data\n2. Urutkan berdasarkan\n3. Tampilkan semua data\nMasukkan pilihan (atau * untuk kembali): ")
        if pilihan == '*':
            return
        if pilihan == '1':
            nis = validasi_nis()
            if nis is None:
                return
            if nis in data_siswa:

                # Tampilkan dalam tabulate
                tampilkan_data_siswa({nis: data_siswa[nis]})
            else:
                print("Data tidak ada.")
        elif pilihan == '2':
            pilihan_sort = input("Urutkan berdasarkan: 1. NIS, 2. Nama, 3. Tanggal Lahir, 4. Kota Domisili, 5. Email\nMasukkan pilihan (atau * untuk kembali): ")
            if pilihan_sort == '*':
                return
            if pilihan_sort == '1':
                sorted_data = dict(sorted(data_siswa.items(), key=lambda x: x[0]))
            elif pilihan_sort == '2':
                sorted_data = dict(sorted(data_siswa.items(), key=lambda x: x[1]['nama']))
            elif pilihan_sort == '3':
                sorted_data = dict(sorted(data_siswa.items(), key=lambda x: datetime.strptime(x[1]['tgl_lahir'], "%d-%m-%Y")))
            elif pilihan_sort == '4':
                sorted_data = dict(sorted(data_siswa.items(), key=lambda x: x[1]['kota_dom']))
            elif pilihan_sort == '5':
                sorted_data = dict(sorted(data_siswa.items(), key=lambda x: x[1]['email']))
            else:
                print("Pilihan tidak valid.")
                return

            # Tampilkan hasil sorting
            tampilkan_data_siswa(sorted_data)
        elif pilihan == '3':
            # Tampilkan semua data, diurutkan berdasarkan NIS
            sorted_data = dict(sorted(data_siswa.items(), key=lambda x: x[0]))
            tampilkan_data_siswa(sorted_data)
        else:
            print("Pilihan tidak valid.")
    elif role == 'student' and username:
        nis = username
        if nis in data_siswa:
            print(f"NIS: {nis}, Data: {data_siswa[nis]}")
            # Tampilkan dalam tabulate
            tampilkan_data_siswa({nis: data_siswa[nis]})
        else:
            print("Data tidak ada.")
    else:
        print("Anda tidak memiliki akses untuk melihat data.")

# Fungsi Backup Data
def backup_data():
    global deleted_data
    while True:
        print("\n=== Backup Data ===")
        print("Tampilkan Deleted Data:")
        tampilkan_deleted_data()

        pilihan = input("1. Backup Data\n2. Hapus Data Backup\nMasukkan pilihan (atau * untuk kembali): ")
        if pilihan == '*':
            return

        if pilihan == '1':
            nis = input("Masukkan NIS yang akan di backup: ")
            if nis.isdigit():
                nis = int(nis)
                if nis in deleted_data:
                    data_siswa[nis] = deleted_data.pop(nis)
                    print(f"Data {nis} berhasil di backup!")
                    break
                else:
                    print("Data tidak ada!")
            else:
                print("NIS tidak valid!")
        elif pilihan == '2':
            deleted_data.clear()
            print("Data backup telah dihapus.")
            break
        else:
            print("Pilihan tidak valid!")

# Fungsi untuk mengubah status siswa menjadi 'Lulus'
def status_siswa():
    nis = validasi_nis()
    if nis is None:
        return
    if nis in data_siswa:
        data_siswa[nis]['status_siswa'] = 'Lulus'
        print(f"Status siswa dengan NIS {nis} telah diubah menjadi 'Lulus'.")
    else:
        print("Data tidak ada.")

# Fungsi Edit (mengedit data siswa)
def edit_siswa(role, username=None):
    if role == 'admin':
        # Tampilkan data siswa terlebih dahulu
        tampilkan_data_siswa(data_siswa)

        nis = validasi_nis() if role == 'admin' else username
        if nis is None:
            return

        if nis in data_siswa:

            print("Pilih opsi edit:")
            print("1. Edit 1 baris")
            print("2. Edit 1 kolom saja")
            print("Masukkan pilihan (atau * untuk kembali): ")
            pilihan = input()
            if pilihan == '*':
                return

            if pilihan == '1': # logika edit 1 baris untuk admin
                nama = validasi_nama()
                tgl_lahir = validasi_tgl_lahir()
                kota_dom = validasi_kota_dom()
                email = validasi_email()

                if nama:
                    data_siswa[nis]['nama'] = nama
                if tgl_lahir:
                    data_siswa[nis]['tgl_lahir'] = tgl_lahir
                if kota_dom:
                    data_siswa[nis]['kota_dom'] = kota_dom
                if email:
                    data_siswa[nis]['email'] = email
                    if validasi_duplikat_email(email):
                        return

                print("Data berhasil diedit.")

            elif pilihan == '2': # logika edit 1 kolom saja untuk admin
                print("Pilih kolom yang ingin diubah:")
                print("1. Nama")
                print("2. Tanggal Lahir")
                print("3. Kota Domisili")
                print("4. Email")
                aksi = input("Masukkan aksi (atau * untuk kembali): ")
                if aksi == '*':
                    return

                if aksi in ['1', '2', '3', '4']:
                    if aksi == '1':
                        nama = validasi_nama()
                        if nama:
                            data_siswa[nis]['nama'] = nama
                            print("Data berhasil diedit.")
                    elif aksi == '2':
                        tgl_lahir = validasi_tgl_lahir()
                        if tgl_lahir:
                            data_siswa[nis]['tgl_lahir'] = tgl_lahir
                            print("Data berhasil diedit.")
                    elif aksi == '3':
                        kota_dom = validasi_kota_dom()
                        if kota_dom:
                            data_siswa[nis]['kota_dom'] = kota_dom
                            print("Data berhasil diedit.")
                    elif aksi == '4':
                        email = validasi_email()
                        if email:
                            data_siswa[nis]['email'] = email
                            if validasi_duplikat_email(email): # Validasi duplikat email
                                return
                            print("Data berhasil diedit.")
                else:
                    print("Pilihan tidak valid.")
        else:
            print("Data tidak ada.")

    elif role == 'student' and username:
            nis = username  # Nis diambil dari user yang login
            pilihan = input("1. Edit 1 baris\n2. Edit 1 kolom saja\nMasukkan pilihan (atau * untuk kembali): ")
            if pilihan == '*':
                return

            # Proses update sesuai pilihan
            if pilihan == '1': # logika edit 1 baris untuk student
                nama = validasi_nama()
                if nama is None:
                    return
                tgl_lahir = validasi_tgl_lahir()
                if tgl_lahir is None:
                    return
                kota_dom = validasi_kota_dom()
                if kota_dom is None:
                    return
                email = validasi_email()
                if email is None or validasi_duplikat_email(email):  # Validasi duplikat email
                    return
                data_siswa[nis] = {'nama': nama, 'tgl_lahir': tgl_lahir, 'kota_dom': kota_dom, 'email': email, 'status_siswa': 'belum lulus'}
                print(f"Data siswa dengan NIS {nis} berhasil diperbarui.")


            elif pilihan == '2': # logika edit 1 kolom saja untuk student
                print("Pilih kolom yang ingin diubah:")
                print("1. Nama")
                print("2. Tanggal Lahir")
                print("3. Kota Domisili")
                print("4. Email")
                aksi = input("Masukkan aksi (atau * untuk kembali): ")
                if aksi == '*':
                    return

                if aksi in ['1', '2', '3', '4']:
                    if aksi == '1':
                        nama = validasi_nama()
                        if nama:
                            data_siswa[nis]['nama'] = nama
                            print("Data berhasil diedit.")
                    elif aksi == '2':
                        tgl_lahir = validasi_tgl_lahir()
                        if tgl_lahir:
                            data_siswa[nis]['tgl_lahir'] = tgl_lahir
                            print("Data berhasil diedit.")
                    elif aksi == '3':
                        kota_dom = validasi_kota_dom()
                        if kota_dom:
                            data_siswa[nis]['kota_dom'] = kota_dom
                            print("Data berhasil diedit.")
                    elif aksi == '4':
                        email = validasi_email()
                        if email:
                            data_siswa[nis]['email'] = email
                            if validasi_duplikat_email(email):
                                return
                            print("Data berhasil diedit.")
                else:
                    print("Pilihan tidak valid.")
    else:
      print("Data tidak ada.")

# Fungsi Delete (menghapus data siswa)
def delete_siswa(role, username=None):
    if role == 'admin' or (role == 'student' and username):
        # Tampilkan data siswa terlebih dahulu
        print("\n=== Tampilkan Data Siswa ===")
        tampilkan_data_siswa(data_siswa)

        nis = validasi_nis() if role == 'admin' else username
        if nis is None:
            return

        if nis in data_siswa:
            deleted_data[nis] = data_siswa.pop(nis)
            print(f"Data siswa dengan NIS {nis} berhasil dihapus.")
        else:
            print("Data tidak ada.")
    else:
        print("Anda tidak memiliki akses untuk menghapus data.")

# Fungsi main
def main():
    while True:
        print("\n=== Sistem Informasi Siswa ===")
        print("1. Login")
        print("2. Keluar")
        pilihan = input("Masukkan pilihan: ")
        if pilihan == '1':
            username, role = login()
            if role == "admin":
                while True:
                    print("\n=== Menu ===")
                    print("1. Lihat Data")
                    print("2. Tambah Data")
                    print("3. Edit Data")
                    print("4. Hapus Data")
                    print("5. Backup Data")
                    print("6. Tambahkan Status Kelulusan Siswa")
                    print("7. Keluar")
                    menu_pilihan = input("Masukkan pilihan: ")
                    if menu_pilihan == '1':
                        read_siswa(role, username)
                    elif menu_pilihan == '2':
                        create_siswa(role, username)
                    elif menu_pilihan == '3':
                        edit_siswa(role, username)
                    elif menu_pilihan == '4':
                        delete_siswa(role, username)
                    elif menu_pilihan == '5':
                        backup_data()
                    elif menu_pilihan == '6':
                        status_siswa()
                    elif menu_pilihan == '7':
                        break
                    else:
                        print("Pilihan tidak valid.")

            elif role == 'student':
                        while True:
                            print("\n1. Lihat Data Diri\n2. Edit Data Diri\n3. Keluar")
                            pilihan = input("Masukkan pilihan: ")
                            if pilihan == '1':
                                read_siswa(role, username)
                            elif pilihan == '2':
                                edit_siswa(role, username)
                            elif pilihan == '3':
                                break
                            else:
                                print("Pilihan tidak valid.")
        elif pilihan == '2':
            print("Terima kasih!")
            break
        else:
            print("Pilihan tidak valid.")

# Jalankan program utama
if __name__ == "__main__":
    main()

